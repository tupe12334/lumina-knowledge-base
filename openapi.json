{
  "openapi": "3.0.0",
  "paths": {
    "/health": {
      "get": {
        "operationId": "HealthController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Health check failed"
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "health"
        ]
      }
    },
    "/health/liveness": {
      "get": {
        "operationId": "HealthController_liveness",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Liveness check failed"
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "health"
        ]
      }
    },
    "/health/readiness": {
      "get": {
        "operationId": "HealthController_readiness",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Readiness check failed"
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "health"
        ]
      }
    },
    "/database/dump": {
      "get": {
        "operationId": "DatabaseController_getDump",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Database dump in SQL format"
          },
          "500": {
            "description": "Failed to create database dump"
          }
        },
        "tags": [
          "database"
        ]
      }
    },
    "/database/info": {
      "get": {
        "operationId": "DatabaseController_getDatabaseInfo",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Database information"
          },
          "500": {
            "description": "Failed to get database info"
          }
        },
        "tags": [
          "database"
        ]
      }
    },
    "/universities": {
      "post": {
        "operationId": "UniversitiesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUniversityInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/University"
                }
              }
            }
          }
        },
        "tags": [
          "universities"
        ]
      },
      "get": {
        "operationId": "UniversitiesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/University"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "universities"
        ]
      }
    },
    "/universities/{id}": {
      "get": {
        "operationId": "UniversitiesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/University"
                }
              }
            }
          }
        },
        "tags": [
          "universities"
        ]
      },
      "put": {
        "operationId": "UniversitiesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/University"
                }
              }
            }
          }
        },
        "tags": [
          "universities"
        ]
      },
      "delete": {
        "operationId": "UniversitiesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "universities"
        ]
      }
    },
    "/courses": {
      "post": {
        "operationId": "CoursesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCourseInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          }
        },
        "tags": [
          "courses"
        ]
      },
      "get": {
        "operationId": "CoursesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Course"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "courses"
        ]
      }
    },
    "/courses/{id}": {
      "get": {
        "operationId": "CoursesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          }
        },
        "tags": [
          "courses"
        ]
      },
      "put": {
        "operationId": "CoursesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          }
        },
        "tags": [
          "courses"
        ]
      },
      "delete": {
        "operationId": "CoursesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "courses"
        ]
      }
    },
    "/courses/relationship": {
      "post": {
        "operationId": "CoursesController_createRelationship",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCourseRelationshipInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseRelationshipResult"
                }
              }
            }
          }
        },
        "tags": [
          "courses"
        ]
      },
      "delete": {
        "operationId": "CoursesController_deleteRelationship",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCourseRelationshipInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "courses"
        ]
      }
    },
    "/courses/{id}/modules": {
      "post": {
        "operationId": "CoursesController_setModules",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          }
        },
        "tags": [
          "courses"
        ]
      }
    },
    "/modules": {
      "post": {
        "operationId": "ModulesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          }
        },
        "tags": [
          "modules"
        ]
      },
      "get": {
        "operationId": "ModulesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Module"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "modules"
        ]
      }
    },
    "/modules/{id}": {
      "get": {
        "operationId": "ModulesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          }
        },
        "tags": [
          "modules"
        ]
      },
      "put": {
        "operationId": "ModulesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          }
        },
        "tags": [
          "modules"
        ]
      },
      "delete": {
        "operationId": "ModulesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "modules"
        ]
      }
    },
    "/modules/relationship": {
      "post": {
        "operationId": "ModulesController_createRelationship",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleRelationshipInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleRelationshipResult"
                }
              }
            }
          }
        },
        "tags": [
          "modules"
        ]
      },
      "delete": {
        "operationId": "ModulesController_deleteRelationship",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteModuleRelationshipInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "modules"
        ]
      }
    },
    "/questions": {
      "post": {
        "operationId": "QuestionsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuestionInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question"
                }
              }
            }
          }
        },
        "tags": [
          "questions"
        ]
      },
      "get": {
        "operationId": "QuestionsController_findAll",
        "parameters": [
          {
            "name": "id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/QuestionType"
            }
          },
          {
            "name": "validationStatus",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/QuestionValidationStatus"
            }
          },
          {
            "name": "moduleId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleIds",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "includeSubmodules",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "courseId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "courseIds",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "questionType",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/QuestionType"
            }
          },
          {
            "name": "questionTypes",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/QuestionType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "questions"
        ]
      }
    },
    "/questions/{id}": {
      "get": {
        "operationId": "QuestionsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question"
                }
              }
            }
          }
        },
        "tags": [
          "questions"
        ]
      },
      "put": {
        "operationId": "QuestionsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question"
                }
              }
            }
          }
        },
        "tags": [
          "questions"
        ]
      },
      "delete": {
        "operationId": "QuestionsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "questions"
        ]
      }
    },
    "/degrees": {
      "post": {
        "operationId": "DegreesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDegreeInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Degree"
                }
              }
            }
          }
        },
        "tags": [
          "degrees"
        ]
      },
      "get": {
        "operationId": "DegreesController_findAll",
        "parameters": [
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Filter by name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "facultyId",
            "required": false,
            "in": "query",
            "description": "Filter by faculty id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "universityId",
            "required": false,
            "in": "query",
            "description": "Filter by university id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Degree"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "degrees"
        ]
      }
    },
    "/degrees/{id}": {
      "get": {
        "operationId": "DegreesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Degree"
                }
              }
            }
          }
        },
        "tags": [
          "degrees"
        ]
      },
      "put": {
        "operationId": "DegreesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Degree"
                }
              }
            }
          }
        },
        "tags": [
          "degrees"
        ]
      },
      "delete": {
        "operationId": "DegreesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "degrees"
        ]
      }
    },
    "/degrees/{id}/faculty": {
      "post": {
        "operationId": "DegreesController_setFaculty",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Degree"
                }
              }
            }
          }
        },
        "tags": [
          "degrees"
        ]
      }
    },
    "/degrees/{id}/courses": {
      "post": {
        "operationId": "DegreesController_addCourse",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Degree"
                }
              }
            }
          }
        },
        "tags": [
          "degrees"
        ]
      }
    },
    "/blocks": {
      "post": {
        "operationId": "BlocksController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBlockInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          }
        },
        "tags": [
          "blocks"
        ]
      },
      "get": {
        "operationId": "BlocksController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Block"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "blocks"
        ]
      }
    },
    "/blocks/{id}": {
      "get": {
        "operationId": "BlocksController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          }
        },
        "tags": [
          "blocks"
        ]
      },
      "put": {
        "operationId": "BlocksController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBlockInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          }
        },
        "tags": [
          "blocks"
        ]
      },
      "delete": {
        "operationId": "BlocksController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "blocks"
        ]
      }
    },
    "/blocks/relationship": {
      "post": {
        "operationId": "BlocksController_createRelationship",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBlockRelationshipInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockRelationshipResult"
                }
              }
            }
          }
        },
        "tags": [
          "blocks"
        ]
      },
      "delete": {
        "operationId": "BlocksController_deleteRelationship",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteBlockRelationshipInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "blocks"
        ]
      }
    },
    "/faculties": {
      "post": {
        "operationId": "FacultiesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFacultyInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Faculty created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Faculty"
                }
              }
            }
          }
        },
        "tags": [
          "faculties"
        ]
      },
      "get": {
        "operationId": "FacultiesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Faculty"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "faculties"
        ]
      }
    },
    "/faculties/{id}": {
      "get": {
        "operationId": "FacultiesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Faculty"
                }
              }
            }
          }
        },
        "tags": [
          "faculties"
        ]
      },
      "put": {
        "operationId": "FacultiesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Faculty"
                }
              }
            }
          }
        },
        "tags": [
          "faculties"
        ]
      },
      "delete": {
        "operationId": "FacultiesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Faculty deleted"
          }
        },
        "tags": [
          "faculties"
        ]
      }
    },
    "/faculties/university/{universityId}": {
      "get": {
        "operationId": "FacultiesController_findByUniversity",
        "parameters": [
          {
            "name": "universityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Faculty"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "faculties"
        ]
      }
    },
    "/translations": {
      "post": {
        "operationId": "TranslationsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTranslationInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Translation"
                }
              }
            }
          }
        },
        "tags": [
          "translations"
        ]
      },
      "get": {
        "operationId": "TranslationsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Translation"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "translations"
        ]
      }
    },
    "/translations/{id}": {
      "get": {
        "operationId": "TranslationsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Translation"
                }
              }
            }
          }
        },
        "tags": [
          "translations"
        ]
      },
      "put": {
        "operationId": "TranslationsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Translation"
                }
              }
            }
          }
        },
        "tags": [
          "translations"
        ]
      },
      "delete": {
        "operationId": "TranslationsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "translations"
        ]
      }
    },
    "/answers": {
      "post": {
        "operationId": "AnswersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAnswerInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Answer"
                }
              }
            }
          }
        },
        "tags": [
          "answers"
        ]
      },
      "get": {
        "operationId": "AnswersController_findAll",
        "parameters": [
          {
            "name": "questionId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Answer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "answers"
        ]
      }
    },
    "/answers/{id}": {
      "get": {
        "operationId": "AnswersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Answer"
                }
              }
            }
          }
        },
        "tags": [
          "answers"
        ]
      },
      "put": {
        "operationId": "AnswersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Answer"
                }
              }
            }
          }
        },
        "tags": [
          "answers"
        ]
      },
      "delete": {
        "operationId": "AnswersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "answers"
        ]
      }
    }
  },
  "info": {
    "title": "Lumina API",
    "description": "API documentation for Lumina server",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateUniversityInput": {
        "type": "object",
        "properties": {
          "en_text": {
            "type": "string",
            "description": "English name of the university"
          },
          "he_text": {
            "type": "string",
            "description": "Hebrew name of the university"
          }
        },
        "required": [
          "en_text",
          "he_text"
        ]
      },
      "Translation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "en_text": {
            "type": "string"
          },
          "he_text": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "en_text",
          "he_text"
        ]
      },
      "Faculty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/Translation"
          },
          "description": {
            "$ref": "#/components/schemas/Translation"
          },
          "degrees": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Degree"
            }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "degrees"
        ]
      },
      "Degree": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/Translation"
          },
          "universityId": {
            "type": "string"
          },
          "university": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/University"
              }
            ]
          },
          "courses": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Course"
            }
          },
          "facultyId": {
            "type": "string",
            "nullable": true
          },
          "faculty": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Faculty"
              }
            ]
          }
        },
        "required": [
          "id",
          "name",
          "universityId",
          "university",
          "courses",
          "facultyId",
          "faculty"
        ]
      },
      "University": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/Translation"
          },
          "courses": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Course"
            }
          },
          "degrees": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Degree"
            }
          }
        },
        "required": [
          "id",
          "name",
          "courses",
          "degrees"
        ]
      },
      "RelationshipMetadataKey": {
        "type": "string",
        "enum": [
          "REASON",
          "TYPE",
          "DESCRIPTION"
        ]
      },
      "RelationshipMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelationshipMetadataKey"
              }
            ]
          },
          "value": {
            "type": "string"
          },
          "blockRelationshipId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "key",
          "value",
          "blockRelationshipId"
        ]
      },
      "BlockRelationship": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "prerequisiteId": {
            "type": "string"
          },
          "postrequisiteId": {
            "type": "string"
          },
          "prerequisite": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Block"
              }
            ]
          },
          "postrequisite": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Block"
              }
            ]
          },
          "metadata": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipMetadata"
            }
          }
        },
        "required": [
          "id",
          "prerequisiteId",
          "postrequisiteId",
          "prerequisite",
          "postrequisite",
          "metadata"
        ]
      },
      "Block": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "prerequisiteFor": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlockRelationship"
            }
          },
          "postrequisiteOf": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlockRelationship"
            }
          },
          "modules": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Module"
            }
          }
        },
        "required": [
          "id",
          "prerequisiteFor",
          "postrequisiteOf",
          "modules"
        ]
      },
      "QuestionValidationStatus": {
        "type": "string",
        "enum": [
          "ai_generated",
          "in_manual_review",
          "approved",
          "rejected"
        ]
      },
      "SelectAnswer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isCorrect": {
            "type": "boolean"
          },
          "translationId": {
            "type": "string"
          },
          "text": {
            "$ref": "#/components/schemas/Translation"
          },
          "answerId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isCorrect",
          "translationId",
          "text",
          "answerId"
        ]
      },
      "UnitAnswer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "unit": {
            "type": "string"
          },
          "answerId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "value",
          "unit",
          "answerId"
        ]
      },
      "NumberAnswer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "answerId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "value",
          "answerId"
        ]
      },
      "Answer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "questionId": {
            "type": "string"
          },
          "SelectAnswer": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectAnswer"
            }
          },
          "UnitAnswer": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitAnswer"
              }
            ]
          },
          "NumberAnswer": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/NumberAnswer"
              }
            ]
          }
        },
        "required": [
          "id",
          "questionId",
          "SelectAnswer",
          "UnitAnswer",
          "NumberAnswer"
        ]
      },
      "QuestionType": {
        "type": "string",
        "enum": [
          "selection",
          "value",
          "void"
        ]
      },
      "QuestionPart": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "questionId": {
            "type": "string"
          },
          "partQuestionId": {
            "type": "string"
          },
          "order": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "questionId",
          "partQuestionId",
          "order"
        ]
      },
      "Question": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "validationStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionValidationStatus"
              }
            ]
          },
          "translationId": {
            "type": "string"
          },
          "text": {
            "$ref": "#/components/schemas/Translation"
          },
          "Answer": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Answer"
            }
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionType"
              }
            ]
          },
          "Modules": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Module"
            }
          },
          "Parts": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionPart"
            }
          },
          "PartOf": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionPart"
            }
          }
        },
        "required": [
          "id",
          "validationStatus",
          "translationId",
          "text",
          "Answer",
          "type",
          "Modules",
          "Parts",
          "PartOf"
        ]
      },
      "Module": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/Translation"
          },
          "translationId": {
            "type": "string"
          },
          "subModules": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Module"
            }
          },
          "parentModules": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Module"
            }
          },
          "Block": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Block"
              }
            ]
          },
          "questions": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Question"
            }
          }
        },
        "required": [
          "id",
          "name",
          "translationId",
          "subModules",
          "parentModules",
          "Block",
          "questions"
        ]
      },
      "Course": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/Translation"
          },
          "universityId": {
            "type": "string"
          },
          "university": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/University"
              }
            ]
          },
          "modules": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Module"
            }
          },
          "publishedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "Block": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Block"
              }
            ]
          }
        },
        "required": [
          "id",
          "name",
          "universityId",
          "university",
          "modules",
          "publishedAt",
          "Block"
        ]
      },
      "CreateCourseInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Course name"
          },
          "universityId": {
            "type": "string",
            "description": "Owning university id",
            "format": "uuid"
          }
        },
        "required": [
          "name",
          "universityId"
        ]
      },
      "CreateCourseRelationshipInput": {
        "type": "object",
        "properties": {}
      },
      "CourseRelationshipResult": {
        "type": "object",
        "properties": {}
      },
      "DeleteCourseRelationshipInput": {
        "type": "object",
        "properties": {}
      },
      "CreateModuleInput": {
        "type": "object",
        "properties": {
          "en_text": {
            "type": "string",
            "description": "English name of the module"
          },
          "he_text": {
            "type": "string",
            "description": "Hebrew name of the module"
          },
          "courseId": {
            "type": "string",
            "description": "ID of the course this module belongs to"
          }
        },
        "required": [
          "en_text",
          "he_text",
          "courseId"
        ]
      },
      "CreateModuleRelationshipInput": {
        "type": "object",
        "properties": {}
      },
      "ModuleRelationshipResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "prerequisite": {
            "$ref": "#/components/schemas/Block"
          },
          "postrequisite": {
            "$ref": "#/components/schemas/Block"
          },
          "metadata": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "prerequisite",
          "postrequisite",
          "metadata"
        ]
      },
      "DeleteModuleRelationshipInput": {
        "type": "object",
        "properties": {}
      },
      "CreateQuestionInput": {
        "type": "object",
        "properties": {}
      },
      "CreateDegreeInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Degree name"
          },
          "universityId": {
            "type": "string",
            "description": "Owning university id",
            "format": "uuid"
          }
        },
        "required": [
          "name",
          "universityId"
        ]
      },
      "CreateBlockInput": {
        "type": "object",
        "properties": {}
      },
      "UpdateBlockInput": {
        "type": "object",
        "properties": {}
      },
      "CreateBlockRelationshipInput": {
        "type": "object",
        "properties": {}
      },
      "BlockRelationshipResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "prerequisite": {
            "$ref": "#/components/schemas/Block"
          },
          "postrequisite": {
            "$ref": "#/components/schemas/Block"
          },
          "metadata": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "prerequisite",
          "postrequisite",
          "metadata"
        ]
      },
      "DeleteBlockRelationshipInput": {
        "type": "object",
        "properties": {}
      },
      "CreateFacultyInput": {
        "type": "object",
        "properties": {}
      },
      "CreateTranslationInput": {
        "type": "object",
        "properties": {
          "en_text": {
            "type": "string",
            "description": "English text"
          },
          "he_text": {
            "type": "string",
            "description": "Hebrew text"
          }
        },
        "required": [
          "en_text",
          "he_text"
        ]
      },
      "CreateSelectAnswerInputItem": {
        "type": "object",
        "properties": {
          "isCorrect": {
            "type": "boolean",
            "description": "Whether the answer item is correct"
          },
          "translationId": {
            "type": "string",
            "description": "Translation id for answer text",
            "format": "uuid"
          }
        },
        "required": [
          "isCorrect",
          "translationId"
        ]
      },
      "CreateAnswerInput": {
        "type": "object",
        "properties": {
          "questionId": {
            "type": "string",
            "description": "Question id",
            "format": "uuid"
          },
          "selectAnswers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSelectAnswerInputItem"
            }
          },
          "unitValue": {
            "type": "number",
            "description": "Unit value for unit-based answers"
          },
          "unit": {
            "type": "string",
            "enum": [
              "meter",
              "kilogram",
              "second",
              "ampere",
              "kelvin",
              "mole",
              "candela"
            ]
          },
          "numberAnswer": {
            "type": "number",
            "description": "Numeric answer (when not unit based)"
          }
        },
        "required": [
          "questionId"
        ]
      }
    }
  }
}